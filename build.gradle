plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.loki'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

tasks.register('buildFrontend', Exec) {
    workingDir 'frontend'
    def npmCommand = "which npm".execute().text.trim()
    commandLine npmCommand, 'run', 'build'
}

tasks.register('copyFrontendBuild', Copy) {
    dependsOn buildFrontend
    from 'frontend/out'
    into 'src/main/resources/static'
}

tasks.named('processResources') {
    mustRunAfter copyFrontendBuild
}

bootJar {
    dependsOn copyFrontendBuild
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    runtimeOnly 'com.mysql:mysql-connector-j'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    annotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
    useJUnitPlatform()
}
